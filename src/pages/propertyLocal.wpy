

// customData = {}  // 自定义数据
// customFunction ()　{}  // 自定义方法
// onLoad () {}  // 在Page和Component共用的生命周期函数
// onShow () {}  // 只在Page中存在的页面生命周期函数
// config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件
// data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定
// components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件
// mixins = [];  // 声明页面所引用的Mixin实例
// computed = {};  // 声明计算属性（详见后文介绍）
// watch = {};  // 声明数据watcher（详见后文介绍）
// methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
// 普通自定义方法在methods对象外声明，与methods平级
// events = {};  // 声明组件之间的事件处理函数
//props  {传值}  在WePY中属于  父子组件之间  传值的一种机制

// 页面跳转，传参写法
// this.$redirect('./page2', {a: 1, b: 2})
// this.$redirect({
//   url: './pages?a=1&b=2'
// });
// this.$navigate(url)


// 水平垂直居中
// display: flex;
// align-items: center;
// justify-content: center;

// 居右
// flex-direction:row;
// justify-content:flex-end

// vertical-align:middle;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;

// 自动换行
// word-break:break-all;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;
<style lang="less">
  .typeSel{
    width: 690rpx;
    height: 90rpx;
    padding: 0 30rpx;
    display:flex;
    align-items:center;
    justify-content:space-between;
  }
  .typeSel view,
  .typeSel icon{
    display:flex;
    align-items:center;
    justify-content:space-between;
    font-size: 30rpx !important;
    color: #a4a4a4;
  }
</style>
<template>
  <view>
    <addressSearch></addressSearch>
    <view class="typeSel">
      <view>
        区域
        <icon class="iconfont icon-jiantou-xia"></icon>
      </view>
      <view>
        总价
        <icon class="iconfont icon-jiantou-xia"></icon>
      </view>
      <view>
        垫拥
        <icon class="iconfont icon-jiantou-xia"></icon>
      </view>
      <view>
        更多
        <icon class="iconfont icon-jiantou-xia"></icon>
      </view>
    </view>
    <view class="list">
      <productItem></productItem>
      <productItem></productItem>
      <productItem></productItem>
      <productItem></productItem>
      <productItem></productItem>
    </view>
  </view>
  
</template>

<script>
  import wepy from 'wepy'
  import addressSearch from '../components/addressSearch' // 顶部搜索
  import productItem from '../components/productItem' // 列表内容组件
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '平安树'
    }
    components = {
      addressSearch: addressSearch,
      productItem: productItem
    }

    mixins = []

    data = {
      img: '/img/test.jpg',
      test: '',
      userInfo: null,
      requestImgUrl: '',
      diningRoom: []
    }

    computed = {

    }

    methods = {
      // 底部导航跳转
      goPage (url, evt) {
        // 销毁当前页{跳转}
        this.$redirect(url)
      },
      goDiningRoomInfo(e) {
        // // 进入餐厅详情
        // this.$navigate(`/pages/restaurantInfo?id=${e.currentTarget.dataset.id}&detail=${e.currentTarget.dataset.detail}&name=${e.currentTarget.dataset.name}`)
        this.$navigate(`/pages/setPreordain?id=${e.currentTarget.dataset.id}`)
      },
      goReservationList(e) {
        // 进入预约列表
        this.$navigate(`/pages/reservationList?id=${e.currentTarget.dataset.id}`)
      }
    }

    events = {

    }

    onLoad() {
      this.userInfo = this.$parent.globalData.userInfo
      this.requestImgUrl = this.$parent.globalData.requestImgUrl
      this.getFoodList()
    }
    getFoodList() {
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/index`,
        method: 'GET',
        data: {
          mobile: this.userName,
          password: this.userPaw
        },
        success: data => {
          if (data.data.code == 1) {
            this.diningRoom = data.data.data
            let i = 0
            var reg = /\\|\//g
            for (i in this.diningRoom) {
              // 替换反斜杠正则
              // replace(reg,"/")
              this.diningRoom[i]['img'] = this.diningRoom[i]['img'].replace(reg, '/')
              this.diningRoom[i]['detail'] = this.diningRoom[i]['detail'].replace(reg, '/')
            }
            this.$apply()
          } else {
            wx.showModal({
              title: '',
              content: data.data.msg
            })
          }
        }
      })
    }
  }
</script>